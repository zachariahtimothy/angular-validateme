/*!
angular-validateme - 0.0.1
Inline, per-field validation for Angular using the internal Angular and browser validation. Prevents you from needing to add markup manually for each element requiring validation. Customizable but designed for Bootstrap form validation.
Build date: 2014-10-10 
*/
angular.module("validateMe",[]),angular.module("validateMe").directive("validation",["validationService","validationOptions",function(a,b){"use strict";return{priority:9999,scope:!1,require:["ngModel","^form"],link:function(c,d,e,f){var g=angular.element('<span class="form-control-feedback glyphicon glyphicon-ok control-valid" />'),h=angular.element('<span class="form-control-feedback glyphicon glyphicon-remove control-invalid" />'),i=f[0],j=(f[1],d.parent());j.append(g).append(h),i.$parsers.push(function(c){return i.$dirty&&(j.addClass(b.containerClasses.feedback),i.$valid?j.addClass(b.containerClasses.success):j.removeClass(b.containerClasses.success),i.$invalid?(j.addClass(b.containerClasses.error),a.showErrors(j,i)):(a.hideErrors(j),j.removeClass(b.containerClasses.error))),c})}}}]),angular.module("validateMe").provider("validationOptions",function(){"use strict";this.animationSpeed="10",this.containerClasses={success:"has-success",error:"has-error",feedback:"has-feedback"},this.validationElement=function(a){var b={required:{message:"This field is required"},minlength:{message:"Input is not long enough"},maxlength:{message:"Input is too long"},pattern:{message:"Pattern not matched"},min:{message:"Minimum not met"},max:{message:"Exceeded maximum"}},c=b[a];return c||(c={message:"Invalid input"}),c.type=c.type||"span",angular.element("<"+c.type+' class="help-block text-danger '+a+'">'+c.message+"</"+c.type+">")},this.validationElement.prototype.setMessage=function(){},this.$get=function(){return{containerClasses:this.containerClasses,animationSpeed:this.animationSpeed,validationElement:this.validationElement}}}),angular.module("validateMe").service("validationService",["validationOptions",function(a){var b=function(a){a.remove()},c=function(c,d){for(var e in d.$error){var f=c.find("."+e);console.log("foundElement",f.length),d.$error[e]?0===f.length&&(f=new a.validationElement(e),c.append(f)):f.length>0&&f.fadeOut(a.animationSpeed,b)}},d=function(c){var d=c.find(".text-danger");d&&d.fadeOut(a.animationSpeed,b)};return{showErrors:c,hideErrors:d}}]);